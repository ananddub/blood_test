syntax = "proto3";

package review;

service ReviewService {
  rpc AddReview (AddReviewRequest) returns (ReviewResponse);
  rpc GetLabReviews (GetLabReviewsRequest) returns (LabReviewsList);
  rpc UpdateReview (UpdateReviewRequest) returns (ReviewResponse);
  rpc DeleteReview (DeleteReviewRequest) returns (DeleteReviewResponse);
  
 
  rpc StreamLabReviews (StreamLabReviewsRequest) returns (stream ReviewDetail);
  rpc WatchNewReviews (WatchNewReviewsRequest) returns (stream ReviewEvent);
}

message AddReviewRequest {
  int32 lab_id = 1;
  int32 test_id = 2;
  int32 rating = 3;
  string comment = 4;
}

message ReviewResponse {
  int32 id = 1;
  int32 lab_id = 2;
  int32 user_id = 3;
  int32 test_id = 4;
  int32 rating = 5;
  string comment = 6;
  int64 created_at = 7;
}

message GetLabReviewsRequest {
  int32 lab_id = 1;
  optional int32 page = 2;
  optional int32 limit = 3;
}

message LabReviewsList {
  repeated ReviewDetail reviews = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
  double avg_rating = 5;
}

message ReviewDetail {
  int32 id = 1;
  UserInfo user = 2;
  int32 rating = 3;
  string comment = 4;
  int64 created_at = 5;
}

message UserInfo {
  int32 id = 1;
  string name = 2;
}

message UpdateReviewRequest {
  int32 id = 1;
  optional int32 rating = 2;
  optional string comment = 3;
}

message DeleteReviewRequest {
  int32 id = 1;
}

message DeleteReviewResponse {
  bool success = 1;
}

message StreamLabReviewsRequest {
  int32 lab_id = 1;
  optional int32 min_rating = 2;
  optional int32 max_rating = 3;
}

message WatchNewReviewsRequest {
  optional int32 lab_id = 1; 
}

message ReviewEvent {
  enum EventType {
    CREATED = 0;
    UPDATED = 1;
    DELETED = 2;
  }
  EventType event_type = 1;
  ReviewDetail review = 2;
  int64 timestamp = 3;
}